/* eslint-disable cspell/spellchecker */
/**
 * The code in this file is adapted from NG Extension Platform at https://ngxtension.netlify.app.
 *
 * Original Author: Chau Tran
 *
 * NG Extension Platform is an open-source project licensed under the MIT license.
 *
 * For more information about the original code, see
 * https://github.com/nartc/ngxtension-platform
 */
/* eslint-enable */
import { Injector, assertInInjectionContext, inject, runInInjectionContext, } from '@angular/core';
export function assertInjector(fn, injector, runner) {
    !injector && assertInInjectionContext(fn);
    const assertedInjector = injector ?? inject(Injector);
    if (!runner)
        return assertedInjector;
    return runInInjectionContext(assertedInjector, runner);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LWluamVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3V0aWwvYXNzZXJ0LWluamVjdG9yL2Fzc2VydC1pbmplY3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBd0M7QUFDeEM7Ozs7Ozs7OztHQVNHO0FBQ0gsbUJBQW1CO0FBRW5CLE9BQU8sRUFDTCxRQUFRLEVBQ1Isd0JBQXdCLEVBQ3hCLE1BQU0sRUFDTixxQkFBcUIsR0FDdEIsTUFBTSxlQUFlLENBQUE7QUFvRHRCLE1BQU0sVUFBVSxjQUFjLENBQzVCLEVBQVksRUFDWixRQUFxQyxFQUNyQyxNQUFrQjtJQUVsQixDQUFDLFFBQVEsSUFBSSx3QkFBd0IsQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUN6QyxNQUFNLGdCQUFnQixHQUFHLFFBQVEsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7SUFFckQsSUFBSSxDQUFDLE1BQU07UUFBRSxPQUFPLGdCQUFnQixDQUFBO0lBQ3BDLE9BQU8scUJBQXFCLENBQUMsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLENBQUE7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGNzcGVsbC9zcGVsbGNoZWNrZXIgKi9cbi8qKlxuICogVGhlIGNvZGUgaW4gdGhpcyBmaWxlIGlzIGFkYXB0ZWQgZnJvbSBORyBFeHRlbnNpb24gUGxhdGZvcm0gYXQgaHR0cHM6Ly9uZ3h0ZW5zaW9uLm5ldGxpZnkuYXBwLlxuICpcbiAqIE9yaWdpbmFsIEF1dGhvcjogQ2hhdSBUcmFuXG4gKlxuICogTkcgRXh0ZW5zaW9uIFBsYXRmb3JtIGlzIGFuIG9wZW4tc291cmNlIHByb2plY3QgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBvcmlnaW5hbCBjb2RlLCBzZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9uYXJ0Yy9uZ3h0ZW5zaW9uLXBsYXRmb3JtXG4gKi9cbi8qIGVzbGludC1lbmFibGUgKi9cblxuaW1wb3J0IHtcbiAgSW5qZWN0b3IsXG4gIGFzc2VydEluSW5qZWN0aW9uQ29udGV4dCxcbiAgaW5qZWN0LFxuICBydW5JbkluamVjdGlvbkNvbnRleHQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5cbi8qKlxuICogYGFzc2VydEluamVjdG9yYCBleHRlbmRzIGBhc3NlcnRJbkluamVjdGlvbkNvbnRleHRgIHdpdGggYW4gb3B0aW9uYWwgYEluamVjdG9yYFxuICogQWZ0ZXIgYXNzZXJ0aW9uLCBgYXNzZXJ0SW5qZWN0b3JgIHJ1bnMgdGhlIGBydW5uZXJgIGZ1bmN0aW9uIHdpdGggdGhlIGd1YXJhbnRlZWQgYEluamVjdG9yYFxuICogd2hldGhlciBpdCBpcyB0aGUgZGVmYXVsdCBgSW5qZWN0b3JgIHdpdGhpbiB0aGUgY3VycmVudCAqKkluamVjdGlvbiBDb250ZXh0KipcbiAqIG9yIHRoZSBjdXN0b20gYEluamVjdG9yYCB0aGF0IHdhcyBwYXNzZWQgaW4uXG4gKlxuICogQHRlbXBsYXRlIHsoKSA9PiBhbnl9IFJ1bm5lciAtIFJ1bm5lciBpcyBhIGZ1bmN0aW9uIHRoYXQgY2FuIHJldHVybiBhbnl0aGluZ1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSB0aGUgRnVuY3Rpb24gdG8gcGFzcyBpbiBgYXNzZXJ0SW5JbmplY3Rpb25Db250ZXh0YFxuICogQHBhcmFtIHtJbmplY3RvciB8IHVuZGVmaW5lZCB8IG51bGx9IGluamVjdG9yIC0gdGhlIG9wdGlvbmFsIFwiY3VzdG9tXCIgSW5qZWN0b3JcbiAqIEBwYXJhbSB7UnVubmVyfSBydW5uZXIgLSB0aGUgcnVubmVyIGZuXG4gKiBAcmV0dXJucyB7UmV0dXJuVHlwZTxSdW5uZXI+fSByZXN1bHQgLSByZXR1cm5zIHRoZSByZXN1bHQgb2YgdGhlIFJ1bm5lclxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogZnVuY3Rpb24gaW5qZWN0VmFsdWUoaW5qZWN0b3I/OiBJbmplY3Rvcikge1xuICogIHJldHVybiBhc3NlcnRJbmplY3RvcihpbmplY3RWYWx1ZSwgaW5qZWN0b3IsICgpID0+ICd2YWx1ZScpO1xuICogfVxuICpcbiAqIGluamVjdFZhbHVlKCk7IC8vIHN0cmluZ1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRJbmplY3RvcjxUUnVubmVyIGV4dGVuZHMgKCkgPT4gYW55PihcbiAgZm46IEZ1bmN0aW9uLFxuICBpbmplY3RvcjogSW5qZWN0b3IgfCB1bmRlZmluZWQgfCBudWxsLFxuICBydW5uZXI6IFRSdW5uZXIsXG4pOiBSZXR1cm5UeXBlPFRSdW5uZXI+XG4vKipcbiAqIGBhc3NlcnRJbmplY3RvcmAgZXh0ZW5kcyBgYXNzZXJ0SW5JbmplY3Rpb25Db250ZXh0YCB3aXRoIGFuIG9wdGlvbmFsIGBJbmplY3RvcmBcbiAqIEFmdGVyIGFzc2VydGlvbiwgYGFzc2VydEluamVjdG9yYCByZXR1cm5zIGEgZ3VhcmFudGVlZCBgSW5qZWN0b3JgIHdoZXRoZXIgaXQgaXMgdGhlIGRlZmF1bHQgYEluamVjdG9yYFxuICogd2l0aGluIHRoZSBjdXJyZW50ICoqSW5qZWN0aW9uIENvbnRleHQqKiBvciB0aGUgY3VzdG9tIGBJbmplY3RvcmAgdGhhdCB3YXMgcGFzc2VkIGluLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIC0gdGhlIEZ1bmN0aW9uIHRvIHBhc3MgaW4gYGFzc2VydEluSW5qZWN0aW9uQ29udGV4dGBcbiAqIEBwYXJhbSB7SW5qZWN0b3IgfCB1bmRlZmluZWQgfCBudWxsfSBpbmplY3RvciAtIHRoZSBvcHRpb25hbCBcImN1c3RvbVwiIEluamVjdG9yXG4gKiBAcmV0dXJucyBJbmplY3RvclxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogZnVuY3Rpb24gaW5qZWN0RGVzdHJveShpbmplY3Rvcj86IEluamVjdG9yKSB7XG4gKiAgaW5qZWN0b3IgPSBhc3NlcnRJbmplY3RvcihpbmplY3REZXN0cm95LCBpbmplY3Rvcik7XG4gKlxuICogIHJldHVybiBydW5JbkluamVjdGlvbkNvbnRleHQoaW5qZWN0b3IsICgpID0+IHtcbiAqICAgIC8vIGNvZGVcbiAqICB9KVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRJbmplY3RvcihcbiAgZm46IEZ1bmN0aW9uLFxuICBpbmplY3RvcjogSW5qZWN0b3IgfCB1bmRlZmluZWQgfCBudWxsLFxuKTogSW5qZWN0b3JcbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRJbmplY3RvcihcbiAgZm46IEZ1bmN0aW9uLFxuICBpbmplY3RvcjogSW5qZWN0b3IgfCB1bmRlZmluZWQgfCBudWxsLFxuICBydW5uZXI/OiAoKSA9PiBhbnksXG4pIHtcbiAgIWluamVjdG9yICYmIGFzc2VydEluSW5qZWN0aW9uQ29udGV4dChmbilcbiAgY29uc3QgYXNzZXJ0ZWRJbmplY3RvciA9IGluamVjdG9yID8/IGluamVjdChJbmplY3RvcilcblxuICBpZiAoIXJ1bm5lcikgcmV0dXJuIGFzc2VydGVkSW5qZWN0b3JcbiAgcmV0dXJuIHJ1bkluSW5qZWN0aW9uQ29udGV4dChhc3NlcnRlZEluamVjdG9yLCBydW5uZXIpXG59XG4iXX0=